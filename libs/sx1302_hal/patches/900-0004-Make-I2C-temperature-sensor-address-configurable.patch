From bea707f2b233593346bd53c362c682eb9385c352 Mon Sep 17 00:00:00 2001
From: Orne Brocaar <info@brocaar.com>
Date: Mon, 19 Dec 2022 09:44:29 +0000
Subject: [PATCH 4/7] Make I2C temperature sensor address configurable.

The Multitech Conduit cards do provide a temperature sensor, but these do
not match the default specified addresses.

By not calling the lgw_i2c_set_temp_sensor_addr, the temperature lookup
will be disabled.
---
 libloragw/inc/loragw_hal.h | 10 ++++++++--
 libloragw/src/loragw_hal.c | 32 ++++++++++++++------------------
 2 files changed, 22 insertions(+), 20 deletions(-)

diff --git a/libloragw/inc/loragw_hal.h b/libloragw/inc/loragw_hal.h
index 88b687b..7e4f412 100644
--- a/libloragw/inc/loragw_hal.h
+++ b/libloragw/inc/loragw_hal.h
@@ -404,10 +404,16 @@ typedef enum lgw_spectral_scan_status_e {
 /* --- PUBLIC FUNCTIONS PROTOTYPES ------------------------------------------ */
 
 /**
-@brief Set I2C device
+@brief Set I2C device path
 @param path         Path to the I2C device driver
 */
-int i2c_set_path(const char *path);
+int lgw_i2c_set_path(const char *path);
+
+/**
+@brief Set I2C temperature sensor address
+@param addr         Address of the I2C temperature sensor.
+*/
+int lgw_i2c_set_temp_sensor_addr(uint8_t addr);
 
 /**
 @brief Configure the gateway board
diff --git a/libloragw/src/loragw_hal.c b/libloragw/src/loragw_hal.c
index b9e4555..3c7541a 100644
--- a/libloragw/src/loragw_hal.c
+++ b/libloragw/src/loragw_hal.c
@@ -210,7 +210,7 @@ static uint8_t ts_addr = 0xFF;
 static int     ad_fd = -1;
 
 /* I2C device */
-char i2c_device[50];
+static char i2c_device[50];
 
 /* -------------------------------------------------------------------------- */
 /* --- PRIVATE FUNCTIONS DECLARATION ---------------------------------------- */
@@ -451,7 +451,7 @@ static int merge_packets(struct lgw_pkt_rx_s * p, uint8_t * nb_pkt) {
 /* -------------------------------------------------------------------------- */
 /* --- PUBLIC FUNCTIONS DEFINITION ------------------------------------------ */
 
-int i2c_set_path(const char *path) {
+int lgw_i2c_set_path(const char *path) {
     if (path) {
         strcpy(i2c_device, path);
         DEBUG_PRINTF("Setting I2C device: %s\n", i2c_device);
@@ -462,6 +462,11 @@ int i2c_set_path(const char *path) {
     }
 }
 
+int lgw_i2c_set_temp_sensor_addr(uint8_t addr) {
+    ts_addr = addr;
+    return LGW_I2C_SUCCESS;
+}
+
 int lgw_board_setconf(struct lgw_conf_board_s * conf) {
     CHECK_NULL(conf);
 
@@ -1107,9 +1112,7 @@ int lgw_start(void) {
     dbg_init_random();
 
     if (CONTEXT_COM_TYPE == LGW_COM_SPI) {
-        /* Find the temperature sensor on the known supported ports */
-        for (i = 0; i < (int)(sizeof I2C_PORT_TEMP_SENSOR); i++) {
-            ts_addr = I2C_PORT_TEMP_SENSOR[i];
+        if (ts_addr != 0xFF) {
             err = i2c_linuxdev_open(i2c_device, ts_addr, &ts_fd);
             if (err != LGW_I2C_SUCCESS) {
                 printf("ERROR: failed to open I2C for temperature sensor on port 0x%02X\n", ts_addr);
@@ -1121,16 +1124,8 @@ int lgw_start(void) {
                 printf("INFO: no temperature sensor found on port 0x%02X\n", ts_addr);
                 i2c_linuxdev_close(ts_fd);
                 ts_fd = -1;
-            } else {
-                printf("INFO: found temperature sensor on port 0x%02X\n", ts_addr);
-                break;
             }
         }
-        if (i == sizeof I2C_PORT_TEMP_SENSOR) {
-            printf("ERROR: no temperature sensor found.\n");
-            // For RAK2287 this is expected to fail as it has no temperature sensor.
-            // return LGW_HAL_ERROR;
-        }
 
         /* Configure ADC AD338R for full duplex (CN490 reference design) */
         if (CONTEXT_BOARD.full_duplex == true) {
@@ -1304,11 +1299,12 @@ int lgw_receive(uint8_t max_pkt, struct lgw_pkt_rx_s *pkt_data) {
     }
 
     /* Apply RSSI temperature compensation */
-    res = lgw_get_temperature(&current_temperature);
-    if (res != LGW_I2C_SUCCESS) {
-        printf("ERROR: failed to get current temperature\n");
-        // For RAK2287 this is expected to fail as it has no temperature sensor.
-        // return LGW_HAL_ERROR;
+    if (ts_fd != -1) {
+        res = lgw_get_temperature(&current_temperature);
+        if (res != LGW_I2C_SUCCESS) {
+            printf("ERROR: failed to get current temperature\n");
+            return LGW_HAL_ERROR;
+        }
     }
 
     /* Iterate on the RX buffer to get parsed packets */
-- 
2.43.0

